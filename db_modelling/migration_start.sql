-- MySQL Script generated by MySQL Workbench
-- Mon Mar 26 18:20:53 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema lebonskill
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `lebonskill` ;

-- -----------------------------------------------------
-- Schema lebonskill
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lebonskill` DEFAULT CHARACTER SET utf8 ;
USE `lebonskill` ;

-- -----------------------------------------------------
-- Table `lebonskill`.`LOGINS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`LOGINS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`LOGINS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(45) NOT NULL,
  `PASSWORD_HASH` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `USERNAME_UNIQUE` (`USERNAME` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`AVAILABILITIES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`AVAILABILITIES` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`AVAILABILITIES` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `DAY_OF_WEEK` VARCHAR(45) NOT NULL,
  `START_TIME` TIME NOT NULL,
  `END_TIME` TIME NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`USERS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`USERS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FIRST_NAME` VARCHAR(45) NULL,
  `FAMILY_NAME` VARCHAR(45) NULL,
  `LOGIN_ID` INT NOT NULL,
  `AVAILABILITIES_ID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_USERS_LOGINS_idx` (`LOGIN_ID` ASC),
  INDEX `fk_USERS_AVAILABILITIES1_idx` (`AVAILABILITIES_ID` ASC),
  CONSTRAINT `fk_USERS_LOGINS`
    FOREIGN KEY (`LOGIN_ID`)
    REFERENCES `lebonskill`.`LOGINS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USERS_AVAILABILITIES1`
    FOREIGN KEY (`AVAILABILITIES_ID`)
    REFERENCES `lebonskill`.`AVAILABILITIES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`SKILL_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`SKILL_TYPE` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`SKILL_TYPE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SKILL_TYPE_NAME` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`SKILLS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`SKILLS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`SKILLS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SKILL_NAME` VARCHAR(255) NULL,
  `SKILL_TYPE_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_SKILLS_SKILL_TYPE1_idx` (`SKILL_TYPE_ID` ASC),
  CONSTRAINT `fk_SKILLS_SKILL_TYPE1`
    FOREIGN KEY (`SKILL_TYPE_ID`)
    REFERENCES `lebonskill`.`SKILL_TYPE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`USERS_SKILLS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`USERS_SKILLS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`USERS_SKILLS` (
  `USER_ID` INT NOT NULL,
  `SKILL_ID` INT NOT NULL,
  `SKILL_LEVEL` INT NULL,
  PRIMARY KEY (`USER_ID`, `SKILL_ID`),
  INDEX `fk_USERS_has_SKILLS_SKILLS1_idx` (`SKILL_ID` ASC),
  INDEX `fk_USERS_has_SKILLS_USERS1_idx` (`USER_ID` ASC),
  CONSTRAINT `fk_USERS_has_SKILLS_USERS1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `lebonskill`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USERS_has_SKILLS_SKILLS1`
    FOREIGN KEY (`SKILL_ID`)
    REFERENCES `lebonskill`.`SKILLS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`MESSAGES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`MESSAGES` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`MESSAGES` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CONTENT` TEXT NULL,
  `TIMESTAMP` TIMESTAMP NULL,
  `FROM_USER_ID` INT NOT NULL,
  `TO_USER_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_MESSAGES_USERS1_idx` (`FROM_USER_ID` ASC),
  INDEX `fk_MESSAGES_USERS2_idx` (`TO_USER_ID` ASC),
  CONSTRAINT `fk_MESSAGES_USERS1`
    FOREIGN KEY (`FROM_USER_ID`)
    REFERENCES `lebonskill`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MESSAGES_USERS2`
    FOREIGN KEY (`TO_USER_ID`)
    REFERENCES `lebonskill`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`AVAILABILITIES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`AVAILABILITIES` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`AVAILABILITIES` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `DAY_OF_WEEK` VARCHAR(45) NOT NULL,
  `START_TIME` TIME NOT NULL,
  `END_TIME` TIME NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`AVAILABILITIES_USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`AVAILABILITIES_USERS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`AVAILABILITIES_USERS` (
  `AVAILABILITY_ID` INT NOT NULL AUTO_INCREMENT,
  `USER_ID` INT NOT NULL,
  PRIMARY KEY (`AVAILABILITY_ID`, `USER_ID`),
  INDEX `fk_AVAILABILITIES_has_USERS_USERS1_idx` (`USER_ID` ASC),
  INDEX `fk_AVAILABILITIES_has_USERS_AVAILABILITIES1_idx` (`AVAILABILITY_ID` ASC),
  CONSTRAINT `fk_AVAILABILITIES_has_USERS_AVAILABILITIES1`
    FOREIGN KEY (`AVAILABILITY_ID`)
    REFERENCES `lebonskill`.`AVAILABILITIES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AVAILABILITIES_has_USERS_USERS1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `lebonskill`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`MEETING_TYPES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`MEETING_TYPES` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`MEETING_TYPES` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `MEETING_TYPE_NAME` VARCHAR(45) NULL,
  `MEETING_TYPE_DESCRIPTION` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`MEETINGS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`MEETINGS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`MEETINGS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `MEETING_STARTTIME` TIMESTAMP NULL,
  `MEETING_ENDTIME` TIMESTAMP NULL,
  `MEETING_NAME` VARCHAR(255) NULL,
  `MEETING_DESCRIPTION` TEXT NULL,
  `MEETING_TYPES_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_MEETINGS_MEETING_TYPES1_idx` (`MEETING_TYPES_ID` ASC),
  CONSTRAINT `fk_MEETINGS_MEETING_TYPES1`
    FOREIGN KEY (`MEETING_TYPES_ID`)
    REFERENCES `lebonskill`.`MEETING_TYPES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lebonskill`.`MEETINGS_USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lebonskill`.`MEETINGS_USERS` ;

CREATE TABLE IF NOT EXISTS `lebonskill`.`MEETINGS_USERS` (
  `MEETING_ID` INT NOT NULL,
  `USERS_ID` INT NOT NULL,
  PRIMARY KEY (`MEETING_ID`, `USERS_ID`),
  INDEX `fk_MEETING_has_USERS_USERS1_idx` (`USERS_ID` ASC),
  INDEX `fk_MEETING_has_USERS_MEETING1_idx` (`MEETING_ID` ASC),
  CONSTRAINT `fk_MEETING_has_USERS_MEETING1`
    FOREIGN KEY (`MEETING_ID`)
    REFERENCES `lebonskill`.`MEETINGS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEETING_has_USERS_USERS1`
    FOREIGN KEY (`USERS_ID`)
    REFERENCES `lebonskill`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
